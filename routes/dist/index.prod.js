"use strict";var express=require("express"),XLSX=require("xlsx"),path=require("path"),Moment=require("moment"),MomentRange=require("moment-range"),moment=MomentRange.extendMoment(Moment),router=express.Router();router.get("/",function(e,t,r){t.render("index",{title:"Express"})}),router.post("/submit",validateData,function(e,t){try{createFile(createJSONData({start:e.body.start,end:e.body.end,period:e.body.period}));var r=path.resolve("./test.xlsx");t.download(r)}catch(e){console.log(e),t.status(400).json(e)}});var column1="1",column2="2";function createJSONData(e){for(var t=[],r=new Date(e.start),a=new Date(e.end),o=moment.range(r,a),n=Array.from(o.by("month")),s=createAnnualTableColumns(o),m=createQuaterlyTableColumn(Array.from(o.by("quarter")),o),u=createMonthlyTableColumn(Array.from(o.by("month"))),d=e.period,i=[2,5,8,11],f=[3,6,9,12],h=0;h<n.length;h++){var c=getRandomNumber(),Y={};Y[column1]=n[h].format("MMM-YYYY");for(var g=(Y[column2]=c)/d,M=n[h].format("YYYY"),p=d,b=d,v=d,S=n[h].format("MM"),y=n[h].format("MM"),x=getQuater(n[h]),X=0;X<s.length;X++){var D=12-S+1;M<=parseInt(s[X])&&0<p?(p<D?(D=p,p=0):p-=D,Y[s[X]]=Math.floor(D*g)):Y[s[X]]=0,S=1}moment(n[h]);for(var w=0;w<m.length;w++){var L=parseInt(moment(m[w].date).format("YYYY")),Q=getQuater(m[w].date);if(M<=L)if(L==M&&Q<x)Y[m[w].headerString]=0,moment(m[w].date);else if(0<b){var _=3;0==w&&(-1!=i.indexOf(parseInt(n[h].format("M")))?_=2:f.indexOf(-1!=parseInt(n[h].format("M")))&&(_=1)),b<_&&(_=b),Y[m[w].headerString]=Math.floor(g*_),b-=_}else Y[m[w].headerString]=0;else Y[m[w].headerString]=0,moment(m[w].date)}for(l=0;l<u.length;l++){var j=parseInt(moment(u[l].date).format("YYYY")),q=parseInt(moment(u[l].date).format("MM"));M<=j?j==M&&q<y?Y[u[l].headerString]=0:0<v?(Y[u[l].headerString]=Math.floor(g),v--):Y[u[l].headerString]=0:Y[u[l].headerString]=0}t.push(Y)}return t}function createMonthlyTableColumn(e){var t=[];return e.forEach(function(e){t.push({date:e,headerString:"".concat(e.format("MM/YYYY"))})}),t}function getQuater(e){return Math.floor((e.toDate().getMonth()+3)/3)}function createQuaterlyTableColumn(e,t){var r=[];return e.forEach(function(e){r.push({date:e,headerString:"Q".concat(Math.floor((e.toDate().getMonth()+3)/3)," ").concat(e.format("YYYY"))})}),moment(e[e.length-1]).isBefore(moment(t.end))&&r.push({date:t.end,headerString:"Q".concat(Math.floor((t.end.toDate().getMonth()+3)/3)," ").concat(t.end.format("YYYY"))}),r}function createAnnualTableColumns(e){for(var t=moment(e.start).format("YYYY"),r=moment(e.end).format("YYYY"),a=[],o=t;o<=r;o++)a.push(o);return a}function getRandomNumber(){return Math.floor(1e5*Math.random())+1}function createFile(e){var t=XLSX.utils.json_to_sheet(e),r=XLSX.utils.book_new();XLSX.utils.book_append_sheet(r,t,"test"),XLSX.writeFile(r,"test.xlsx")}function readFile(){var e=path.resolve("./public/images/dates.xlsx"),t=XLSX.readFile(e),r=t.SheetNames;return XLSX.utils.sheet_to_json(t.Sheets[r[0]])}function validateData(e,t,r){if(e.body.start&&e.body.end&&e.body.period)try{var a=new Date(e.body.start);new Date(e.body.end)<a?t.status(400).json({error:"end date should be after start date"}):r()}catch(e){t.status(400).json({error:"invalid data"})}else t.status(400).json({error:"invalid data"})}module.exports=router;